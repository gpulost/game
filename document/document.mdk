# 场景:
1. GG需要和一些游戏做联运，所以需要有一个联运平台和联运sdk
2. 同时我们有很多重打包的游戏，对于这些游戏，我们会加入一些plugin(每个plugin会包含一些功能)，而这些功能的使用需要用户拥有不同的level,
   因此我们也作为一个CP(Content Provider)来接入GG联运平台发行这些游戏


# 解释

###CP
            Content Provider, 游戏开发商

##GGLY-Server
		        游戏联运平台, 联运平台和游戏开发商合作发行游戏，同一个游戏开发商可以和多家联运平台合作发行游戏，联运平台参提供账号系统，充值功能等功能，参入游戏收入分成

##CPServer 和 3rd-CPServer
		        1.游戏的发行方，为游戏提供数据支持，游戏内的各种逻辑，道具都是通过CPServer控制的
            2.在联运过程中，我们自己重打包的游戏也是以联运的方式发行，用以区分第三方游戏的CPServer，我们自己的叫做CPServer第三方的称为3rd-CPServer

##GGLY-SDK
           1. 联运的SDK，进行联运的游戏需要集成该SDK
           2. 该SDK和GGLY-Server交互
           3. 该SDK提供登录注册、购买道具等功能

##currency
            游戏中的货币(eg.10个金币、20个钻石),GGLY-SDK向GGLY-Server购买,消耗RMB或者GG平台的积分

##commodity
            游戏中的商品(eg.裤子，魔法),游戏向CPServer购买,消耗currency

##plugin 

            每个游戏会包含多个plugin，每个plugin会有一些功能点，这些功能点就是商品(commodity)

##game
            和GGLY-Server进行联运的游戏，game中集成了GGLY-SDK

##game_id
	         对于自有game
                  game_id为，8位16进制的字符串,game_id已有，直接录入到CP系统中
            对于3rd-CP game
                  game_id为，9位16进制的字符串,以及其他形式的能够区分开自有游戏和联运游戏的方式，3rd-CP需要向GGLY-Server申请game_id

##game_token
          1. GGLY-SDK向GGLY-Server登录成功后获取的game_token,由GGLY-Server生成，用于Game获取到当前游戏用户的subid
          2. game_token有效期为5分钟，过期无效，需要重新申请
          3. game_token的验证需要考虑:
              a. 有效期
              b. game_id
              c. sub_user_id,
              d. ip
              e. device_info(optional)

##sub_user_id
		        GG账号在对应游戏中的id

##secert_key
            1.secert_key在GGLY-Server平台获取
            2.GGLY-Server向CPServer或3rd-CPServer通知商品购买时使用secert_key和其他业务数据作为参数hash生成签名，用于CPServer校验通知数据的真实性
            3.签名生成算法参考 GG平台联运接入文档 V1.0.0




# 功能

##游戏上架，游戏商品录入

###自有联运游戏上架流程
![3.1.1 CPServer (1)]

[3.1.1 CPServer (1)]: images/3.1.1-CPServer-(1).svg "3.1.1 CPServer (1)" { width:auto; max-width:90% }

eg:

  一款游戏有以下commodity数据，自有游戏的commodity只通过GG积分或RMB

![QQ图片20160613185107]
  

[QQ图片20160613185107]: images/QQ-20160613185107.png "QQ图片20160613185107" { width:auto; max-width:90% }

那么commodity数据需要录入到GGLY-Server的数据只需要有(game_id, commodity_id, price_type, price)

注：

   1. GGLY-Server需要提供录入game信息, 商品(commodity_id, price_type, price)的功能
   2. CPServer需要提供录入game，商品详情信息的功能
   3. 自有的game可以支持每个游戏secert_key和game_token校验地址相同或者每个不同，这个看具体业务需求


###第三方联运游戏上架流程
![3.1.2 3rd-CP (1)]

[3.1.2 3rd-CP (1)]: images/3.1.2-3rd-CP-(1).svg "3.1.2 3rd-CP (1)" { width:auto; max-width:90% }


注：

   1. GGLY-Server需要提供录入game信息, 商品(commodity_id, price_type, price)的功能


##注册(不区分CPServer和3rd-CPServer)
![3.2注册]

[3.2注册]: images/3.2-.svg "3.2注册" { width:auto; max-width:90% }

GGLY-SDK注册功能支持三种方式：

1. 手机号
2. 第三方QQ
3. 第三方weixin 


##登录(不区分CPServer和3rd-CPServer)
![3.3登录 (2)]

[3.3登录 (2)]: images/3.3-(2).svg "3.3登录 (2)" { width:auto; max-width:90% }


GGLY-SDK登录功能支持四种方式:

1. 手机号
2. 第三方QQ
3. 第三方weixin 
4. 老账号密码

说明:

  1. 步骤1的GGLY-Server处理需要考虑 <subid, game_id, device, ip>
  2. 步骤3,4的参数都要带上： <subid, game_id, device, ip>

##登录注册效果图
![QQ图片20160613171444]

[QQ图片20160613171444]: images/QQ-20160613171444.png "QQ图片20160613171444" { width:auto; max-width:50% }


##商品购买（区分自有和3rd的联运游戏）
1. GGLY-Server并不区分commodity和currency
2. 对于GGLY-Server只需要知道(subid, game_id, commodity_id/currency_id, price_type, price)
3. 并且完成购买后向CPServer或3rd-CPServer通知(subid, game_id, commodity_id/currency_id)购买成功

###自有联运游戏的commodity购买
![3.4.1自有产品购买 (1)]

[3.4.1自有产品购买 (1)]: images/3.4.1-(1).svg "3.4.1自有产品购买 (1)" { width:auto; max-width:90% }



###第三方联运游戏的commodity和currency购买
![3.4.2 3rd购买]

[3.4.2 3rd购买]: images/3.4.2-3rd-.svg "3.4.2 3rd购买" { width:auto; max-width:90% }





